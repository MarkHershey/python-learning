# -*- coding: utf-8 -*-
"""python_list.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eQzeutT2OoggJNAbavLI5OkHmPeMAYcp

# Python Data Type: List

## 1. List Creation
"""

# create empty list
names = []
cities = list()

print(names, type(names), sep=" | ")
print(cities, type(cities), sep=" | ")

"""## 2. Add new item into a List"""

names.append("Eve")
names.append("Katy")
names.append("Rachel")
names.append("Phoebe")
names.append("Annabelle")
names.append("Adele")
print(names)

cities = ["Tokyo", "Singapore", "New York City", "Shanghai", "KL", "Manila", "Jakarta", "Seoul", "Bangkok"]
print(cities)

"""## 3. Access item(s) in a List"""

# access by a specific index
print(names[0])
print(names[3])
print(names[-1])
print(names[-2])

print() # just to print a line break

# traverse all items in a list
for name in names:
  print("Hello,", name)

print() # just to print a line break

# this will show you "i" is an arbitrary temporary variable name
# below will produce the same output as above
for i in names:
  print("Hello,", i)

print() # just to print a line break

# sometimes indexes are useful
# how to get the item and its index at the same time?
for index, name in enumerate(names):
  print(index, name, sep=" | ")

"""## 4. Count number of items in a List"""

length = len(names)
print(length)

names.append("Adele") # this shows List can contain multiple identical objects
names.append("Adele")
names.append("Adele")
print(len(names))
print(names)

"""## 5. Remove item(s) from a List"""

# remove an item at specific index
# method 1: del
del names[0]
print(names)
print()

# method 2: pop
removed_name = names.pop(0) # pop() also returns the item being deleted
print("removed name:", removed_name)
print(names)
print()

# remove an item with specific value
names.remove("Adele") # this will remove the first occurrence of 'Adele' only
print(names)
print()

# remove the last item from a List
names.pop() # 01
print("# 01:", names)

names.pop(-1) # 02
print("# 02:", names)

del names[-1] # 03
print("# 03:", names)

"""## 6. List Slicing"""

names = ['Rachel', 'Phoebe', 'Annabelle', 'Eve', 'Katy', 'Rachel', 'Phoebe', 'Annabelle', 'Adele']
class_01 = names[:3]
class_02 = names[3:6]
class_03 = names[6:]

print(class_01)
print(class_02)
print(class_03)

"""## 7. Randomise & Sort a List
*No need to implement quick sort, python sorts it for you!*

There are two ways to sort a List in python:

for a list called `cities`
- Method 1: `cities.sort()`
  - this is in-place sort, it does not return anything, so `print(cities.sort())` will print None.
  - this method is NOT recommended
- Method 2: `sorted_cities = sorted(cities)`
  - this `sorted()` does not change orginal List object, instead, it returns a new sorted list
  - this is the proper way to sort in Python
"""

import random

print("original list:")
print(cities)

print()
print("Method 1")

print("randomised list:")
random.shuffle(cities)
print(cities)

print("sorted list:")
cities.sort() # sort method 1
print(cities)

print()
print("Method 2")

print("randomised list:")
random.shuffle(cities)
print(cities)

print("sorted list:")
a = sorted(cities) # sort method 2
print("a:", a)
print("cities:", cities)

"""## 7.1 More on `sorted()`
By default, `sorted()` sorts items in alphabetical ascending order, but actually you can do more with `sorted()`
"""

# sort by city name length
print(sorted(cities, key=len, reverse=True))

"""## 8. List Concatenation (Join two lists)"""

cities = ["Tokyo", "Singapore", "Shanghai", "Jakarta", "Bangkok"]
american_cities = ["Los Angeles", "Seattle", "San Diego", "Chicago"]

print("cities:", cities)
print("american_cities:", american_cities)

# you can do this
for city in american_cities:
  cities.append(city)

# or more succinctly
cities = cities + american_cities

print("cities:", cities)

"""## 9. Remove duplicated items in a List"""

print(cities)
cities = list(set(cities))
print(cities)

"""## 10. Lucky Draw from a List
(Randomly select an item from a list)
"""

print("Lucky cities are:")
for i in range(3):
  draw = random.choice(cities)
  print(draw)
  cities.remove(draw)
